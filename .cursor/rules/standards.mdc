---
description: 
globs: 
alwaysApply: true
---
# Coding Standards

This document outlines the coding standards and quality control procedures that must be followed when contributing to this project.

## Style

Always use type hints. Use the types with Upprcase first letter for types like Dict[], List[] etc.

## Code Quality Checks

### Linting and Type Checking

Before finalizing a task, you must run the following command to check for linting issues, type errors, and code quality problems:

```bash
make check
```

This command runs multiple code quality tools:
- Pyright: Static type checking
- Ruff: Fast Python linter
- Mypy: Static type checker

Always fix any issues reported by these tools before proceeding.

### Running Tests

We have several make commands for running tests:

1. `make tp`: Runs all tests with these markers:
   ```
   (dry_runnable or not (inference or llm or imgg or ocr)) and not (needs_output or pipelex_api)
   ```
   Use this for quick test runs that don't require LLM or image generation.

2. To run specific tests:
   ```bash
   make tp TEST=TestClassName
   # or
   make tp TEST=test_function_name
   ```
   It matches names, so `TEST=test_function_name` is going to run all test with the function name that STARTS with `test_function_name`.

## Important Project Directories

### Tests Directory
- All tests are located in the `tests/` directory

### Documentation Directory
- All documentation is located in the `docs/` directory
